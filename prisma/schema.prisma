generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Status {
  ACTIVE
  INACTIVE
  DELETED
}

model User {
  id            Int        @id @default(autoincrement())
  email         String     @unique
  avatar        String?
  createdAt     DateTime   @default(now())
  firstName     String?
  hash          String?
  hashExpiredAt DateTime?
  lastName      String?
  password      String?
  role          UserRole   @default(USER)
  status        UserStatus @default(PENDING)
  updatedAt     DateTime?
}

enum UserRole {
  USER
  ADMIN
}

enum UserStatus {
  ACTIVE
  INACTIVE
  DELETED
  PENDING
  DRAFT
}

model Doctor {
  id                     Int                  @id @default(autoincrement())
  avatar                 String?
  firstName              String
  lastName               String
  doctorSpecializationId Int
  address                String
  lat                    Float
  long                   Float
  status                 Status?              @default(ACTIVE)
  createdAt              DateTime             @default(now())
  updatedAt              DateTime?
  deletedAt              DateTime?
  doctorSpecialization   DoctorSpecialization @relation(fields: [doctorSpecializationId], references: [id])
  doctorWorkingHours     DoctorWorkingHours[]
}

model DoctorSpecialization {
  id        Int       @id @default(autoincrement())
  name      String
  status    Status?   @default(ACTIVE)
  createdAt DateTime  @default(now())
  updatedAt DateTime?
  deletedAt DateTime?
  doctor    Doctor[]
}

model DoctorWorkingHours {
  id        Int       @id @default(autoincrement())
  day       Int
  open      String
  close     String
  doctorId  Int
  createdAt DateTime  @default(now())
  updatedAt DateTime?
  doctor    Doctor    @relation(fields: [doctorId], references: [id])
}
